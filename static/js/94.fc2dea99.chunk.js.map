{"version":3,"file":"static/js/94.fc2dea99.chunk.js","mappings":"oLACA,GAAgB,gBAAkB,iC,SCgBlC,MAdA,WACE,OACE,gBAAKA,UAAWC,EAAAA,gBAAhB,UACE,SAAC,KAAD,CACEC,YAAY,UACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAIhB,C,6ICdD,EAA6B,qCAA7B,EAA+E,qCAA/E,EAAiI,qCAAjI,EAAqL,uC,uCCgDrL,EAzCyB,WACvB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,2FAClBN,GAAa,GADK,mBAGOO,EAAAA,EAAAA,IAAgBJ,GAHvB,OAGVK,EAHU,OAIhBV,GAAW,OAAIU,EAASC,UACA,IAApBD,EAASE,QACXC,EAAAA,GAAAA,KAAW,uCANG,gDAShBT,EAAS,KAAMU,SATC,yBAWhBZ,GAAa,GAXG,4EAAH,qDAcjBM,GACD,GAAE,CAACH,IAEJ,IAAMU,EAAWhB,EAAQiB,KAAI,WAA0BC,GAAS,IAAhCZ,EAA+B,EAA/BA,GAAIa,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,QAC1C,OACE,gBAAI5B,UAAWC,EAAf,WACE,eAAGD,UAAWC,EAAd,qBAA4C0B,MAC5C,cAAG3B,UAAWC,EAAd,SAAkC2B,MAFGd,EAAKY,EAK/C,IACD,OACE,gCACGhB,IAAa,SAACmB,EAAA,EAAD,IACbjB,IAAS,0EACV,eAAIZ,UAAWC,EAAf,SAAmCuB,MAGxC,C,iKC9CKM,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAiB,mCAAG,WAAMC,GAAN,yFACRN,EAASO,IAAT,uBAAqC,CAC1DJ,OAAQ,CACNG,KAAAA,KAH2B,uBACvBE,EADuB,EACvBA,KADuB,kBAMxBA,GANwB,2CAAH,sDAkBjBC,EAAe,mCAAG,WAAMzB,GAAN,yFACNgB,EAASO,IAAT,iBAAuBvB,IADjB,uBACrBwB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfE,EAAe,mCAAG,WAAM1B,GAAN,yFACNgB,EAASO,IAAT,iBAAuBvB,EAAvB,aADM,uBACrBwB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfpB,EAAe,mCAAG,WAAMJ,GAAN,yFACNgB,EAASO,IAAT,iBAAuBvB,EAAvB,aADM,uBACrBwB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieReviewsPage/MovieReviewsPage.module.css?2a7e","pages/MovieReviewsPage/MovieReviewsPage.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ContainerLoader\":\"Loader_ContainerLoader__ySsrp\"};","import { RotatingLines } from 'react-loader-spinner';\nimport styles from './Loader.module.css';\n\nfunction Loader() {\n  return (\n    <div className={styles.LoaderContainer}>\n      <RotatingLines\n        strokeColor=\"#3194d1\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"50\"\n        visible={true}\n      />\n    </div>\n  );\n}\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewList\":\"MovieReviewsPage_reviewList__Goa-F\",\"reviewItem\":\"MovieReviewsPage_reviewItem__36Eqb\",\"reviewText\":\"MovieReviewsPage_reviewText__eSX+U\",\"reviewAuthor\":\"MovieReviewsPage_reviewAuthor__hU0dS\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styles from './MovieReviewsPage.module.css';\nimport Loader from 'components/Loader/Loader';\nimport { toast } from 'react-toastify';\n\nimport { getMovieReviews } from '../../services/api';\n\nconst MovieReviewsPage = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchReview = async () => {\n      setIsLoading(true);\n      try {\n        const response = await getMovieReviews(id);\n        setReviews([...response.results]);\n        if (response.length === 0) {\n          toast.warn('There is no review about this movie');\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchReview();\n  }, [id]);\n\n  const elements = reviews.map(({ id, author, content }, idx) => {\n    return (\n      <li className={styles.reviewItem} key={id + idx}>\n        <p className={styles.reviewAuthor}>Author: {author}</p>\n        <p className={styles.reviewText}>{content}</p>\n      </li>\n    );\n  });\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>Something goes wrong. Please try again later.</p>}\n      <ul className={styles.reviewList}>{elements}</ul>\n    </>\n  );\n};\nexport default MovieReviewsPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'c780801336e7f1f89f24f8fc75df6bab',\n  },\n});\n\nexport const getTrendingMovies = async page => {\n  const { data } = await instance.get(`/trending/movie/day?`, {\n    params: {\n      page,\n    },\n  });\n  return data;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await instance.get(`search/movie`, {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["className","styles","strokeColor","strokeWidth","animationDuration","width","visible","useState","reviews","setReviews","isLoading","setIsLoading","error","setError","id","useParams","useEffect","fetchReview","getMovieReviews","response","results","length","toast","message","elements","map","idx","author","content","Loader","instance","axios","baseURL","params","api_key","getTrendingMovies","page","get","data","getMovieDetails","getMovieCredits"],"sourceRoot":""}