{"version":3,"file":"static/js/518.113a10e1.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","utils/smoothScroll.js","webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","components/Movies/Movies.module.css","components/Movies/Movies.jsx","webpack://goit-react-hw-05-movies/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx","services/api.js"],"sourcesContent":["import { RotatingLines } from 'react-loader-spinner';\n// import css from './Loader.module.css';\n\nfunction Loader() {\n  return (\n    <div className=\"LoaderContainer\">\n      <RotatingLines\n        strokeColor=\"#3f51b5\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"50\"\n        visible={true}\n      />\n    </div>\n  );\n}\n\nexport default Loader;\n","export const smoothScroll = () => {\n  const { height: cardHeight } = document\n    .querySelector('li')\n    .firstElementChild.getBoundingClientRect();\n  window.scrollBy({\n    top: cardHeight * 3,\n    behavior: 'smooth',\n  });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"trendList\":\"MoviesList_trendList__qw6Iw\",\"trendItem\":\"MoviesList_trendItem__B5uZ5\",\"moviePoster\":\"MoviesList_moviePoster__feY6F\",\"movieTitle\":\"MoviesList_movieTitle__CxO8p\"};","import PropTypes from 'prop-types';\nimport { useLocation, Link } from 'react-router-dom';\nimport styles from './MoviesList.module.css';\nimport defaultImg from '../../images/default_poster.jpg';\n\nconst MoviesList = ({ films }) => {\n  const location = useLocation();\n  const items = films.map(({ id, title, poster_path }) => (\n    <li key={id} className={styles.trendItem}>\n      <Link state={{ from: location }} to={`/movies/${id}`}>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/original/${poster_path}`\n              : defaultImg\n          }\n          alt={title}\n          className={styles.moviePoster}\n          loading=\"lazy\"\n        ></img>\n        <p className={styles.movieTitle}>{title} </p>\n      </Link>\n    </li>\n  ));\n  return <ul className={styles.trendList}>{items} </ul>;\n};\n\nMoviesList.propTypes = {\n  films: PropTypes.array,\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'services/api';\nimport { smoothScroll } from 'utils/smoothScroll';\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport styles from './Movies.module.css';\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const api = async () => {\n      setIsLoading(true);\n      try {\n        const data = await getTrendingMovies(page);\n        if (page === 1) {\n          return setFilms([...data.results]);\n        }\n        setFilms(prevFilms => [...prevFilms, ...data.results]);\n        setIsVisible(data.page < Math.ceil(data.total_results / data.per_page));\n        smoothScroll();\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    api();\n  }, [page]);\n\n  const LoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>Error</p>}\n      {<MoviesList films={films} />}\n      {isVisible && (\n        <button className={styles.btnLm} type=\"button\" onClick={LoadMore}>\n          Load More\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","// extracted by mini-css-extract-plugin\nexport default {\"mainTitle\":\"HomePage_mainTitle__bxyRS\"};","import Movies from '../../components/Movies/Movies';\nimport styles from './HomePage.module.css';\n\nconst HomePage = () => {\n  return (\n    <div className=\"container\">\n      <h1 className={styles.mainTitle}>Trending today</h1>\n      <Movies />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'c780801336e7f1f89f24f8fc75df6bab',\n  },\n});\n\nexport const getTrendingMovies = async page => {\n  const { data } = await instance.get(`/trending/movie/day?`, {\n    params: {\n      page,\n    },\n  });\n  return data;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await instance.get(`search/movie`, {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["className","strokeColor","strokeWidth","animationDuration","width","visible","smoothScroll","cardHeight","document","querySelector","firstElementChild","getBoundingClientRect","height","window","scrollBy","top","behavior","films","location","useLocation","items","map","id","title","poster_path","styles","state","from","to","src","defaultImg","alt","loading","useState","setFilms","page","setPage","error","setError","isLoading","setIsLoading","isVisible","setIsVisible","useEffect","api","getTrendingMovies","data","results","prevFilms","Math","ceil","total_results","per_page","message","Loader","type","onClick","prevPage","instance","axios","baseURL","params","api_key","get","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}