{"version":3,"file":"static/js/914.c24e56f0.chunk.js","mappings":"qLACA,GAAgB,gBAAkB,iC,SCgBlC,MAdA,WACE,OACE,gBAAKA,UAAWC,EAAAA,gBAAhB,UACE,SAAC,KAAD,CACEC,YAAY,UACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAIhB,C,6ICdD,GAAgB,SAAW,gCAAgC,SAAW,gCAAgC,QAAU,gC,iDCgEhH,EAxDsB,WACpB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBN,GAAa,GADG,mBAGOO,EAAAA,EAAAA,IAAgBJ,GAHvB,OAGRK,EAHQ,OAIdV,GAAQ,OAAIU,EAAOX,OAJL,gDAMdY,EAAAA,GAAAA,MAAY,KAAMC,SAClBR,EAAS,KAAMQ,SAPD,yBASdV,GAAa,GATC,4EAAH,qDAYfM,GACD,GAAE,CAACH,IAEJ,IAAMQ,EAAWd,EAAKe,KACpB,WAAuDC,GAAS,IAA7DV,EAA4D,EAA5DA,GAAIW,EAAwD,EAAxDA,KAAMC,EAAkD,EAAlDA,cAAeC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,UACxC,OACE,gBAAI5B,UAAWC,EAAAA,SAAf,WACE,gBACED,UAAWC,EAAAA,QACX4B,IACmB,OAAjBF,EACIG,EADJ,0CAEuCH,GAEzCI,IAAG,OAAEN,QAAF,IAAEA,EAAAA,EAAQC,EACbM,QAAQ,SATZ,OAWGP,QAXH,IAWGA,EAAAA,EAAQC,GAET,eAAG1B,UAAWC,EAAAA,SAAd,wBAA2C2B,OAbRd,EAAKU,EAgB7C,IAEH,OACE,gCACGd,IAAa,SAACuB,EAAA,EAAD,IACbrB,IAAS,yEACTJ,EAAK0B,OAAS,IAAK,eAAIlC,UAAWC,EAAAA,SAAf,SAAiCqB,KACnDV,IACCF,GACe,IAAhBF,EAAK0B,QACLd,EAAAA,GAAAA,KAAW,wCAGlB,C,yLC9DKe,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAiB,mCAAG,WAAMC,GAAN,yFACRN,EAASO,IAAT,uBAAqC,CAC1DJ,OAAQ,CACNG,KAAAA,KAH2B,uBACvBE,EADuB,EACvBA,KADuB,kBAMxBA,GANwB,2CAAH,sDASjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNV,EAASO,IAAT,eAA6B,CAClDJ,OAAQ,CACNO,MAAAA,KAHyB,uBACrBF,EADqB,EACrBA,KADqB,kBAMtBA,GANsB,2CAAH,sDASfG,EAAe,mCAAG,WAAMhC,GAAN,yFACNqB,EAASO,IAAT,iBAAuB5B,IADjB,uBACrB6B,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfzB,EAAe,mCAAG,WAAMJ,GAAN,yFACNqB,EAASO,IAAT,iBAAuB5B,EAAvB,aADM,uBACrB6B,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfI,EAAe,mCAAG,WAAMjC,GAAN,yFACNqB,EAASO,IAAT,iBAAuB5B,EAAvB,aADM,uBACrB6B,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieCastPage/MovieCastPage.module.css?b847","pages/MovieCastPage/MovieCastPage.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ContainerLoader\":\"Loader_ContainerLoader__ySsrp\"};","import { RotatingLines } from 'react-loader-spinner';\nimport styles from './Loader.module.css';\n\nfunction Loader() {\n  return (\n    <div className={styles.LoaderContainer}>\n      <RotatingLines\n        strokeColor=\"#3194d1\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"50\"\n        visible={true}\n      />\n    </div>\n  );\n}\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"MovieCastPage_castList__3a7n0\",\"castItem\":\"MovieCastPage_castItem__1lqZI\",\"castImg\":\"MovieCastPage_castImg__YU+ts\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styles from './MovieCastPage.module.css';\nimport Loader from 'components/Loader/Loader';\nimport { toast } from 'react-toastify';\n\nimport { getMovieCredits } from '../../services/api';\nimport defaultImg from '../../images/default_poster.jpg';\n\nconst MovieCastPage = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      setIsLoading(true);\n      try {\n        const result = await getMovieCredits(id);\n        setCast([...result.cast]);\n      } catch (error) {\n        toast.error(error.message);\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCast();\n  }, [id]);\n\n  const elements = cast.map(\n    ({ id, name, original_name, profile_path, character }, idx) => {\n      return (\n        <li className={styles.castItem} key={id + idx}>\n          <img\n            className={styles.castImg}\n            src={\n              profile_path === null\n                ? defaultImg\n                : `https://image.tmdb.org/t/p/w300/${profile_path}`\n            }\n            alt={name ?? original_name}\n            loading=\"lazy\"\n          />\n          {name ?? original_name}\n\n          <p className={styles.castChar}>Character: {character}</p>\n        </li>\n      );\n    }\n  );\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>Something goes wrong. Please try again later.</p>}\n      {cast.length > 0 && <ul className={styles.castList}>{elements}</ul>}\n      {!error &&\n        !isLoading &&\n        cast.length === 0 &&\n        toast.warn('There is no information about cast')}\n    </>\n  );\n};\nexport default MovieCastPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'c780801336e7f1f89f24f8fc75df6bab',\n  },\n});\n\nexport const getTrendingMovies = async page => {\n  const { data } = await instance.get(`/trending/movie/day?`, {\n    params: {\n      page,\n    },\n  });\n  return data;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await instance.get(`search/movie`, {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["className","styles","strokeColor","strokeWidth","animationDuration","width","visible","useState","cast","setCast","isLoading","setIsLoading","error","setError","id","useParams","useEffect","fetchCast","getMovieCredits","result","toast","message","elements","map","idx","name","original_name","profile_path","character","src","defaultImg","alt","loading","Loader","length","instance","axios","baseURL","params","api_key","getTrendingMovies","page","get","data","getMovieByQuery","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}