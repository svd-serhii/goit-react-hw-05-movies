{"version":3,"file":"static/js/94.48d461de.chunk.js","mappings":"4JAiBA,IAdA,WACE,OACE,gBAAKA,UAAU,kBAAf,UACE,SAAC,KAAD,CACEC,YAAY,UACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAIhB,C,mICdD,GAAiB,E,sCCkDjB,EA1CyB,WACvB,OAA6BC,EAAAA,EAAAA,UAAS,IAAtC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,2FAClBN,GAAa,GADK,mBAGKO,EAAAA,EAAAA,IAAgBJ,GAHrB,OAGVK,EAHU,OAIhBV,EAAUU,GAJM,gDAMhBC,EAAAA,GAAAA,MAAY,KAAMC,SAClBR,EAAS,KAAMQ,SAPC,yBAShBV,GAAa,GATG,4EAAH,qDAYjBM,GACD,GAAE,CAACH,IAEJ,IAAMQ,EAAWd,EAAQe,KAAI,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAC3B,gBAAIxB,UAAWyB,EAAAA,aAAf,WACE,eAAGzB,UAAWyB,EAAAA,eAAd,oBAA6CF,MAC7C,cAAGvB,UAAWyB,EAAAA,aAAd,SAAoCD,MAFGX,EADd,IAM7B,OACE,gCACGJ,IAAa,SAACiB,EAAA,EAAD,IACbf,IAAS,qEACTJ,EAAQoB,OAAS,IAChB,eAAI3B,UAAWyB,EAAAA,aAAf,SAAqCJ,IAEnB,IAAnBd,EAAQoB,SACP,cAAG3B,UAAWyB,EAAAA,SAAd,mDAIP,C,iKChDKG,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAiB,mCAAG,WAAMC,GAAN,yFACRN,EAASO,IAAT,uBAAqC,CAC1DJ,OAAQ,CACNG,KAAAA,KAH2B,uBACvBE,EADuB,EACvBA,KADuB,kBAMxBA,GANwB,2CAAH,sDAkBjBC,EAAe,mCAAG,WAAMxB,GAAN,yFACNe,EAASO,IAAT,iBAAuBtB,IADjB,uBACrBuB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfE,EAAe,mCAAG,WAAMzB,GAAN,yFACNe,EAASO,IAAT,iBAAuBtB,EAAvB,aADM,uBACrBuB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfnB,EAAe,mCAAG,WAAMJ,GAAN,yFACNe,EAASO,IAAT,iBAAuBtB,EAAvB,aADM,uBACrBuB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD","sources":["components/Loader/Loader.jsx","pages/MovieReviewsPage/MovieReviewsPage.module.css","pages/MovieReviewsPage/MovieReviewsPage.jsx","services/api.js"],"sourcesContent":["import { RotatingLines } from 'react-loader-spinner';\n// import css from './Loader.module.css';\n\nfunction Loader() {\n  return (\n    <div className=\"LoaderContainer\">\n      <RotatingLines\n        strokeColor=\"#3f51b5\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"50\"\n        visible={true}\n      />\n    </div>\n  );\n}\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styles from './MovieReviewsPage.module.css';\nimport Loader from 'components/Loader/Loader';\nimport { toast } from 'react-toastify';\n\nimport { getMovieReviews } from '../../services/api';\n// import defaultImg from '../../images/default_poster.jpg';\n\nconst MovieReviewsPage = () => {\n  const [reviews, setReview] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchReview = async () => {\n      setIsLoading(true);\n      try {\n        const result = await getMovieReviews(id);\n        setReview(result);\n      } catch (error) {\n        toast.error(error.message);\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchReview();\n  }, [id]);\n\n  const elements = reviews.map(({ id, author, content }) => (\n    <li className={styles.review__item} key={id}>\n      <p className={styles.review__author}>Author:{author}</p>\n      <p className={styles.review__text}>{content}</p>\n    </li>\n  ));\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>Unexpected error. Please try again later.</p>}\n      {reviews.length > 0 && (\n        <ul className={styles.review__list}>{elements}</ul>\n      )}\n      {reviews.length === 0 && (\n        <p className={styles.errorMsg}>There is no review about this movie</p>\n      )}\n    </>\n  );\n};\nexport default MovieReviewsPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'c780801336e7f1f89f24f8fc75df6bab',\n  },\n});\n\nexport const getTrendingMovies = async page => {\n  const { data } = await instance.get(`/trending/movie/day?`, {\n    params: {\n      page,\n    },\n  });\n  return data;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await instance.get(`search/movie`, {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["className","strokeColor","strokeWidth","animationDuration","width","visible","useState","reviews","setReview","isLoading","setIsLoading","error","setError","id","useParams","useEffect","fetchReview","getMovieReviews","result","toast","message","elements","map","author","content","styles","Loader","length","instance","axios","baseURL","params","api_key","getTrendingMovies","page","get","data","getMovieDetails","getMovieCredits"],"sourceRoot":""}